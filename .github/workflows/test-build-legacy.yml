name: Build Legacy

on:
  workflow_dispatch:

jobs:
  test-build-legacy-cabal:
    name: Build Agda (${{ matrix.agda-version }}) on ${{ matrix.os }} with Cabal
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Build Agda (${{ matrix.agda-version }})
        uses: ./
        with:
          agda-version: ${{ matrix.agda-version }}
          bdist-upload: true
          bdist-name: |
            agda-{{{agda-version}}}
                -{{{arch}}}
                -${{ matrix.os }}
                -icu{{{icu-version}}}
                -ghc{{{ghc-version}}}
                -cabal{{{cabal-version}}}
          cabal-version: ${{ matrix.cabal-version }}
          force-build: true
          ghc-version-match-exact: false
    strategy:
      matrix:
        os: [ubuntu-20.04]
        agda-version: [
            # Prior to 2.4.2.2 Agda did not use the tested-with field,
            # therefore we cannot determine the compatible GHC versions when
            # building with Cabal, so we exclude the following versions:
            #
            # '2.2.0',   '2.2.10',  '2.2.2',  '2.2.4',   '2.2.6',   '2.2.8',
            # '2.3.0',   '2.3.0.1', '2.3.2',  '2.3.2.1', '2.3.2.2', '2.4.0',
            # '2.4.0.1', '2.4.0.2', '2.4.2',  '2.4.2.1', '2.4.2.2',

            '2.4.2.3',
            '2.4.2.4',
            '2.4.2.5',
            '2.5.1.2'
          ]
        cabal-version: ['2.4']

  test-build-legacy-stack:
    name: Build Agda (${{ matrix.agda-version }}) on ${{ matrix.os }} with Stack
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3
      - name: Build Agda (${{ matrix.agda-version }})
        uses: ./
        with:
          agda-version: ${{ matrix.agda-version }}
          bdist-upload: true
          bdist-name: |
            agda-{{{agda-version}}}
                -{{{arch}}}
                -${{ matrix.os }}
                -icu{{{icu-version}}}
                -ghc{{{ghc-version}}}
                -cabal{{{cabal-version}}}
                -stack{{{stack-version}}}
          cabal-version: ${{ matrix.cabal-version }}
          enable-stack: true
          force-build: true
          ghc-version-match-exact: true
          stack-no-global: ${{ matrix.stack-no-global }}
          stack-setup-ghc: ${{ matrix.stack-setup-ghc }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        agda-version: [
            # Prior to 2.5.2 Agda did not ship with stack-XYZ.yaml files,
            # therefore we cannot determine the compatible GHC versions when
            # building with Stack, so we exclude the following versions:
            #
            # '2.2.0',   '2.2.10',  '2.2.2',  '2.2.4',   '2.2.6',   '2.2.8',
            # '2.3.0',   '2.3.0.1', '2.3.2',  '2.3.2.1', '2.3.2.2', '2.4.0',
            # '2.4.0.1', '2.4.0.2', '2.4.2',  '2.4.2.1', '2.4.2.2', '2.4.2.3',
            # '2.4.2.4', '2.4.2.5', '2.5.1.2',

            # '2.5.2',   # Error: All install methods for ghc 8.0.1 failed
            #            #
            #            # TODO: Try with `stack-setup-ghc`?

            # '2.5.3',   # Error: Could not build package happy-1.19.5:
            #            # > Building happy-1.19.5...
            #            # > Preprocessing executable 'happy' for happy-1.19.5...
            #            # > setup: The program 'happy' is required but it could not be found
            #            #
            #            # TODO: Try explicitly calling `stack install alex` & `stack install happy`?

            '2.5.2',
            '2.5.3',
            '2.5.4.2',
            '2.6.0.1',
            '2.6.1.3',
            '2.6.2',
            '2.6.2.1'
          ]
        cabal-version: ['2.4']
        include:
          - stack-no-global: false
            stack-setup-ghc: false
          - agda-version: '2.5.2'
            stack-no-global: true
            stack-setup-ghc: true
