name: 'Setup Agda'
author: 'Wen Kokke'
description: 'Set up a specific version of Agda'
inputs:
  agda-version:
    default: 'latest'
    description: 'The Agda version. Can be "nightly", "latest", a specific version number (e.g., 2.6.2.2), a partial version number (e.g., 2.6), or a git commit hash'
    required: true
  ghc-version-range:
    default: '*'
    description: 'Range of GHC versions to use. It will be used to restrict the set of GHC versions compatible with the specified Agda version'
    required: false
  upload-bdist:
    description: 'If specified, will upload a binary distribution for the specified Agda version'
    required: false
  upload-bdist-target-platform:
    description: 'If specified, will override the target platform triple used in the archive. Otherwise, this is inferred from `ghc --info`'
    required: false
  upload-bdist-compress-bin:
    description: 'If specified, will compress the Agda binaries'
    required: false

  # The following inputs are used exclusively by actions/haskell/setup:
  #
  # NOTE: All inputs for actions/haskell/setup are reproduced here, even the unsupported ones,
  #       because actions/haskell/setup reads its default values from `__dirname/../actions.yml`,
  #       which resolves to this file when using actions/haskell/setup as a library.
  #
  #       The implementation for actions/haskell/setup does not account for the default values not
  #       being present, and ALWAYS reads the defaults, even if the inputs are specified, this always
  #       fails with:
  #
  #         Error: Cannot read properties of undefined (reading 'default')
  #
  ghc-version:
    default: 'latest'
    description: 'Unsupported. Use "ghc-version-range"'
    required: false
  cabal-version:
    default: 'latest'
    description: 'Version of Cabal to use. If set to "latest", it will always get the latest stable version'
    required: false
  stack-version:
    default: 'latest'
    description: 'Version of Stack to use. If set to "latest", it will always get the latest stable version'
    required: false
  enable-stack:
    description: 'If specified, will setup Stack'
    required: false
  stack-no-global:
    description: 'If specified, enable-stack must be set. Prevents installing GHC and Cabal globally'
    required: false
  stack-setup-ghc:
    description: 'If specified, enable-stack must be set. Will run stack setup to install the specified GHC'
    required: false
  disable-matcher:
    description: 'If specified, disables match messages from GHC as GitHub CI annotations'
    required: false

outputs:
  agda-path:
    description: 'The path of the agda executable _directory_'
  agda-data-path:
    description: 'The path of the agda data _directory_'
  haskell-setup:
    description: 'Whether or not actions/haskell/setup ran'

  # The following outputs are set by actions/haskell/setup, if it runs:
  ghc-path:
    description: 'The path of the ghc executable _directory_'
  cabal-path:
    description: 'The path of the cabal executable _directory_'
  stack-path:
    description: 'The path of the stack executable _directory_'
  cabal-store:
    description: 'The path to the cabal store'
  stack-root:
    description: 'The path to the stack root (equal to the STACK_ROOT environment variable if it is set; otherwise an OS-specific default)'
  ghc-exe:
    description: 'The path of the ghc _executable_'
  cabal-exe:
    description: 'The path of the cabal _executable_'
  stack-exe:
    description: 'The path of the stack _executable_'

runs:
  using: 'node16'
  main: 'dist/index.js'
